account:
  columns:
    accid: { type: int(10) unsigned, notnull: true, primary: true, autoincrement: true, comment: account id }
    name: { type: varchar(255), notnull: true, comment: account name }
  data:
    - { name: GaterData }

application:
  columns:
    appid: { type: int(10) unsigned, notnull: true, primary: true, autoincrement: true, comment: application id }
    accid: { type: int(10) unsigned, notnull: true, comment: account id }
    name: { type: varchar(255), notnull: true, comment: application name }
  data:
    - { accid: 1, name: Testing }

user:
  columns:
    uid: { type: int(10) unsigned, notnull: true, primary: true, autoincrement: true, comment: user id }
    active: { type: tinyint(4), notnull: true, default: 1, comment: user status }
    username: { type: varchar(255), notnull: true, comment: user name }
    hash: { type: varchar(32), default: NULL, comment: pasword hash }
    token: { type: varchar(32), default: NULL, comment: temporary access token }
    token_ttl: { type: timestamp, default: NULL, comment: end of life for token }
    email: { type: varchar(255), notnull: true, comment: user email address }
    honorific: { type: varchar(16), notnull: true, comment: users title }
    name_first: { type: varchar(255), notnull: true, comment: first name }
    name_last: { type: varchar(255), notnull: true, comment: last name }
    company: { type: varchar(255), default: NULL, comment: company name }
    website: { type: varchar(255), default: NULL, comment: company url }
    address_street: { type: varchar(255), default: NULL, comment: user number and street name }
    address_suburb: { type: varchar(255), default: NULL, comment: user address and suburb }
    address_city: { type: varchar(255), default: NULL, comment: user city }
    address_state: { type: varchar(255), default: NULL, comment: user state }
    address_country: { type: varchar(255), default: NULL, comment: user country }
    address_postcode: { type: varchar(16), default: NULL, comment: user postcode }
    phone_mobile: { type: varchar(32), default: NULL, comment: user mobile number }
    phone_work: { type: varchar(32), default: NULL, comment: user work number }

role:
  columns:
    rid: { type: int(10) unsigned, notnull: true, primary: true, autoincrement: true, comment: role id }
    name: { type: varchar(255), notnull: true, comment: title of role }
  data:
    - { name: Developer }
    - { name: Consumer }

administrator:
  columns:
    aid: { type: int(10) unsigned, notnull: true, primary: true, autoincrement: true, comment: administrator id }
    uid: { type: int(10) unsigned, notnull: true, comment: user id }

manager:
  columns:
    mid: { type: int(10) unsigned, notnull: true, primary: true, autoincrement: true, comment: account owner id }
    uid: { type: int(10) unsigned, notnull: true, comment: user id }
    accid: { type: int(10) unsigned, notnull: true, comment: account id }

application_user_role:
  columns:
    aurid: { type: int(10) unsigned, notnull: true, primary: true, autoincrement: true, comment: application user role id }
    appid: { type: int(10) unsigned, notnull: true, comment: application id }
    uid: { type: int(10) unsigned, notnull: true, comment: user id }
    rid: { type: int(10) unsigned, notnull: true, comment: role id }

invite:
  columns:
    iid: { type: int(10) unsigned, notnull: true, primary: true, autoincrement: true, comment: invite id }
    accid: { type: int(10) unsigned, notnull: true, comment: account id }
    email: { type: varchar(255), default: true, comment: invite email address }
    token: { type: varchar(255), notnull: true, comment: invite token }

resource:
  columns:
    resid: { type: int(10) unsigned, notnull: true, primary: true, autoincrement: true, comment: resource id }
    appid: { type: int(10) unsigned, notnull: true, comment: application id }
    name: { type: varchar(255), notnull: true, comment: name of the resource }
    description : { type: varchar(2048), notnull: true, comment: description of the resource }
    method: { type: text, notnull: true, comment: form delivery method }
    identifier: { type: varchar(64), notnull: true, comment: identifier of the api call }
    meta: { type: varchar(16384), notnull: true, comment: all of the actions taken by the call }
    ttl: { type: int(10) unsigned, notnull: true, default: 300, comment: time to cache the results (seconds) }
  data:
    - { appid: 1, name: Account create, description: Create an account, method: post, identifier: account, ttl: 0, meta: "{'security':{'function':'TokenSysAdmin','id':1,'token':{'function':'varPost','id':2,'name':'token'}},'process':{'function':'datagatorAccount','id':4,'username':{'function':'varPost','id':5,'name':'username'},'accountName':{'function':'varPost','id':7,'name':'accountName'}}}" }
    - { appid: 1, name: Account delete, description: Delete an account, method: delete, identifier: account, ttl: 0, meta: "{'security':{'function':'TokenSysAdmin','id':1,'token':{'function':'varGet','id':2,'name':'token'}},'process':{'function':'datagatorAccount','id':4,'accountName':{'function':'varGet','id':5,'name':'accountName'}}}' }
    - { appid: 1, name: Account read, description: Read an account, method: get, identifier: account, ttl: 0, meta: '{'security':{'function':'TokenSysAdmin','id':1,'token':{'function':'varGet','id':2,'name':'token'}},'process':{'function':'datagatorAccount','id':4,'accountName':{'function':'varGet','id':5,'name':'accountName'}}}' }
    - { appid: 1, name: Application create, description: Create an application, method: post, identifier: application, ttl: 0, meta: "{'security':{'function':'TokenSysAdmin','id':1,'token':{'function':'varPost','id':2,'name':'token'}},'process':{'function':'datagatorApplication','id':4,'accountName':{'function':'varPost','id':5,'name':'accountName'},'applicationName':{'function':'varPost','id':7,'name':'applicationName'}}}' }
    - { appid: 1, name: Application delete, description: Delete an application, method: delete, identifier: applicaton, ttl: 0, meta: "{'security':{'function':'TokenSysAdmin','id':1,'token':{'function':'varGet','id':2,'name':'token'}},'process':{'function':'datagatorApplication','id':4,'applicationName':{'function':'varGet','id':5,'name':'applicationName'}}}' }
    - { appid: 1, name: Application fetch, description: Fetch an application, method: get, identifier: application, ttl: 0, meta: "{'security':{'function':'TokenSysAdmin','id':1,'token':{'function':'varGet','id':2,'name':'token'}},'process':{'function':'datagatorApplication','id':4,'applicationName':{'function':'varGet','id':5,'name':'applicationName'}}}' }
    - { appid: 1, name: User create, description: Create a user, method: post, identifier: user, ttl: 0, meta: "{'security':{'function':'TokenSysAdmin','id':1,'token':{'function':'varPost','id':2,'name':'token'}},'process':{'function':'datagatorUser','id':3,'username':{'function':'varPost','id':4,'name':'username'},'active':{'function':'varPost','id':5,'name':'active'},'email':{'function':'varPost','id':6,'name':'email'},'honorific':{'function':'varPost','id':7,'name':'honorific'},'nameFirst':{'function':'varPost','id':8,'name':'nameFirst'},'nameLast':{'function':'varPost','id':9,'name':'nameLast'},'company':{'function':'varPost','id':10,'name':'company'}}}' }
    - { appid: 1, name: User delete, description: Delete a user, method: delete, identifier: user, ttl: 0, meta: "{'security':{'function':'TokenSysAdmin','id':1,'token':{'function':'varGet','id':2,'name':'token'}},'process':{'function':'datagatorUser','id':3,'username':{'function':'varGet','id':4,'name':'username'}}}' }
    - { appid: 1, name: User fetch, description: Fetch a user, method: get, identifier: user, ttl: 0, meta: "{'security':{'function':'TokenSysAdmin','id':1,'token':{'function':'varGet','id':2,'name':'token'}},'process':{'function':'datagatorUser','id':3,'username':{'function':'varGet','id':4,'name':'username'}}}' }
    - { appid: 1, name: User Role create, description: Add a role for a user for an application, method: post, identifier: userrole, ttl: 0, meta: "{'security':{'function':'TokenSysAdmin','id':1,'token':{'function':'varPost','id':2,'name':'token'}},'process':{'function':'datagatorUserRole','id':3,'username':{'function':'varPost','id':4,'name':'username'},'applicationName':{'function':'varPost','id':5,'name':'applicationName'},'roleName':{'function':'varPost','id':6,'name':'roleName'}}}' }
    - { appid: 1, name: User Role delete, description: Delete a role for a user and/or application, method: delete, identifier: userrole, ttl: 0, meta: "{'security':{'function':'TokenSysAdmin','id':1,'token':{'function':'varGet','id':2,'name':'token'}},'process':{'function':'datagatorUserRole','id':3,'username':{'function':'varGet','id':4,'name':'username'},'applicationName':{'function':'varGet','id':5,'name':'applicationName'},'roleName':{'function':'varPost','id':6,'name':'roleName'}}}' }
    - { appid: 1, name: User Role fetch, description: Fetch a role for a user on an application, method: get, identifier: userrole, ttl: 0, meta: "{'security':{'function':'TokenSysAdmin','id':1,'token':{'function':'varGet','id':2,'name':'token'}},'process':{'function':'datagatorUserRole','id':3,'username':{'function':'varGet','id':4,'name':'username'},'applicationName':{'function':'varGet','id':5,'name':'applicationName'},'roleName':{'function':'varPost','id':6,'name':'roleName'}}}' }
    - { appid: 2, name: Processors all, description: Fetch details of all procssors, method: get, identifier: processors/all, ttl: 3600, meta: "{'security':{'function':'tokenDeveloper','id':1,'token':{'function':'varGet','id':2,'name':'token'}},'process':{'function':'ProcessorsAll','id':3}}' }
    - { appid: 2, name: Resource delete, description: Delete a resource, method: delete, identifier: resource, ttl: 0, meta: "{'security':{'function':'tokenDeveloper','id':1,'token':{'function':'varRequest','id':2,'name':'token'}},'process':{'function':'resourceYaml','id':3,'method':{'function':'varRequest','id':4,'name':'method'},'uri':{'function':'varRequest','id':5,'name':'uri'}}}' }
    - { appid: 2, name: Resource export JSON, description: Export a resource in string or JSON format, method: get, identifier: resource/json, ttl: 0, meta: "{'security':{'function':'tokenDeveloper','id':1,'token':{'function':'varGet','id':2,'name':'token'}},'process':{'function':'resourceJson','id':3,'method':{'function':'varGet','id':4,'name':'method'},'noun':{'function':'varGet','id':5,'name':'noun'},'verb':{'function':'varGet','id':6,'name':'verb'}}}' }
    - { appid: 2, name: Resource export YAML, description: Fetch a resource in string or YAML format, method: get, identifier: resource/yaml, ttl: 0, meta: "{'security':{'function':'tokenDeveloper','id':1,'token':{'function':'varGet','id':2,'name':'token'}},'process':{'function':'resourceYaml','id':3,'method':{'function':'varGet','id':4,'name':'method'},'noun':{'function':'varGet','id':5,'name':'noun'},'verb':{'function':'varGet','id':6,'name':'verb'}}}' }
    - { appid: 2, name: Resource import JSON, description: Create a resource from a document or string in JSON format, method: post, identifier: resource/json, ttl: 0, meta: "{'security':{'function':'tokenDeveloper','id':1,'token':{'function':'varPost','id':2,'name':'token'}},'process':{'function':'resourceJson','id':3,'yaml':{'function':'varPost','id':4,'name':'yaml'}}}' }
    - { appid: 2, name: Resource import Swagger, description: Create resource/s from a Swagger document, method: post, identifier: resource/swagger, ttl: 0, meta: "{'security':{'function':'tokenDeveloper','id':1,'token':{'function':'varPost','id':2,'name':'token'}},'process':{'function':'resourceSwagger','id':3,'resource':'resource'}}' }
    - { appid: 2, name: Resource import YAML, description: Create a resource from a document or string in YAML format, method: post, identifier: resource/yaml, ttl: 0, meta: "{'security':{'function':'tokenDeveloper','id':1,'token':{'function':'varPost','id':2,'name':{'function':'literal','id':3,'value':'token'}}},'process':{'function':'resourceYaml','id':4,'resource':{'function':'literal','id':3,'value':'resource'}}}' }
    - { appid: 2, name: User login, description: Login a user to Datagator using username/password, method: post, identifier: user/login, ttl: 0, meta: "{'process':{'function':'UserLogin','id':1,'username':{'function':'VarPost','id':2,'name':'username'},'password':{'function':'VarPost','id':3,'name':'password'}}}' }

external_user:
  columns:
    euid: { type: int(10) unsigned, notnull: true, primary: true, autoincrement: true, comment: external user id }
    appid: { type: int(10) unsigned, notnull: true, comment: application id }
    external_id: { type: varchar(255), notnull: true, comment: user id in external entity }
    external_entity: { type: varchar(255), notnull: true, comment: name of the external entity }
    data_field_1: { type: varchar(255), notnull: false, comment: extra data field 1 }
    data_field_2: { type: varchar(255), notnull: false, comment: extra data field 2 }
    data_field_3: { type: varchar(255), notnull: false, comment: extra data field 3 }

blacklist:
  columns:
    blid: { type: int(10) unsigned, notnull: true, primary: true, autoincrement: true, comment: blacklist id }
    appid: { type: int(10) unsigned, notnull: true, comment: application id }
    min_ip: { type: varchar(32), notnull: true, comment: ip range minimum }
    max_ip: { type: varchar(32), notnull: true, comment: ip range maximum }

whitelist:
  columns:
    wlid: { type: int(10) unsigned, notnull: true, primary: true, autoincrement: true, comment: whitelist id }
    appid: { type: int(10) unsigned, notnull: true, comment: application id }
    min_ip: { type: varchar(32), notnull: true, comment: ip range minimum }
    max_ip: { type: varchar(32), notnull: true, comment: ip range maximum }

log:
  columns:
    lid: { type: int(10) unsigned, notnull: true, primary: true, autoincrement: true, comment: log id }
    datetime: { type: timestamp, notnull: true, default: CURRENT_TIMESTAMP, comment: log time and date }
    user: { type: varchar(255), notnull: true, comment: user name }
    ip: { type: varchar(11), notnull: true, comment: user id }
    type: { type: varchar(64), notnull: true, comment: call type }
    text: { type: varchar(1024), notnull: true, comment: log text }

var:
  columns:
    vid: { type: int(10) unsigned, notnull: true, primary: true, autoincrement: true, comment: var id }
    appid: { type: int(10) unsigned, notnull: true, comment: application id }
    name: { type: varchar(255), notnull: true, comment: name of the var }
    val: { type: varchar(255), notnull: true, comment: value of the var }
