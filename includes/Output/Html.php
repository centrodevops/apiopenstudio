<?php

namespace Gaterdata\Output;

class Html extends Xml
{
    /**
     * {@inheritDoc}
     */
    protected $header = 'Content-Type:text/html';

    /**
     * {@inheritDoc}
     */
    protected $details = [
        'name' => 'Html',
        'machineName' => 'html',
        'description' => 'Output in the results of the resource in HTML format to a remote server.',
        'menu' => 'Output',
        'input' => [
            'destination' => [
                'description' => 'Destination URLs for the output.',
                'cardinality' => [0, '*'],
                'literalAllowed' => true,
                'limitFunctions' => [],
                'limitTypes' => ['text'],
                'limitValues' => [],
                'default' => '',
            ],
            'method' => [
                'description' => 'HTTP delivery method when sending output. Only used in the output section.',
                'cardinality' => [0, 1],
                'literalAllowed' => true,
                'limitFunctions' => [],
                'limitTypes' => ['text'],
                'limitValues' => ['get', 'post'],
                'default' => '',
            ],
            'options' => [
                // phpcs:ignore
                'description' => 'Extra Curl options to be applied when sent to the destination (e.g. cursor: -1, screen_name: foobarapi, skip_status: true, etc).',
                'cardinality' => [0, '*'],
                'literalAllowed' => true,
                'limitFunctions' => ['field'],
                'limitTypes' => ['text'],
                'limitValues' => [],
                'default' => '',
            ],
        ],
    ];

    /**
    * {@inheritDoc}
    */
    protected function fromBoolean(&$data)
    {
        $prefix = '<!DOCTYPE html><html>';
        $prefix .= '<head><meta charset="utf-8"><title>HTML generated by Datagator</title></head><body>';
        $suffix = '</body></html>';
        return $prefix . $data ? 'true' : 'false' . $suffix;
    }

    /**
    * {@inheritDoc}
    */
    protected function fromInteger(&$data)
    {
        $prefix = '<!DOCTYPE html><html>';
        $prefix .= '<head><meta charset="utf-8"><title>HTML generated by Datagator</title></head><body>';
        $suffix = '</body></html>';
        return $prefix . $data . $suffix;
    }

    /**
    * {@inheritDoc}
    */
    protected function fromFloat(&$data)
    {
        $prefix = '<!DOCTYPE html><html>';
        $prefix .= '<head><meta charset="utf-8"><title>HTML generated by Datagator</title></head><body>';
        $suffix = '</body></html>';
        return $prefix . $data . $suffix;
    }

    /**
    * {@inheritDoc}
    */
    protected function fromXml(&$data)
    {
        $prefix = '<!DOCTYPE html><html>';
        $prefix .= '<head><meta charset="utf-8"><title>HTML generated by Datagator</title></head><body>';
        $suffix = '</body></html>';
        return $prefix . $data . $suffix;
    }

    /**
    * {@inheritDoc}
    */
    protected function fromHtml(&$data)
    {
        return $data;
    }

    /**
    * {@inheritDoc}
    */
    protected function fromText(&$data)
    {
        $prefix = '<!DOCTYPE html><html>';
        $prefix .= '<head><meta charset="utf-8"><title>HTML generated by Datagator</title></head><body>';
        $suffix = '</body></html>';
        return $prefix . $data . $suffix;
    }

    /**
    * {@inheritDoc}
    */
    protected function fromArray(&$data)
    {
        $prefix = '<!DOCTYPE html><html>';
        $prefix .= '<head><meta charset="utf-8"><title>HTML generated by Datagator</title></head><body>';
        $suffix = '</body></html>';
        return $prefix . $this->_array2dl($data) . $suffix;
    }

    /**
    * {@inheritDoc}
    */
    protected function fromJson(&$data)
    {
        $prefix = '<!DOCTYPE html><html>';
        $prefix .= '<head><meta charset="utf-8"><title>HTML generated by Datagator</title></head><body>';
        $suffix = '</body></html>';
        return $prefix . $data . $suffix;
    }

    /**
    * Convert an array to a dl.
    * @param $arr
    * @return string
    */
    private function _array2dl(&$arr)
    {
        $result = '<dl>';
        foreach ($arr as $key => $val) {
            $result .= "<dt>$key</dt>";
            if (is_array($val)) {
                $result .= '<dd>' . $this->_array2dl($val) . '</dd>';
            } else {
                $result .= "<dd>$val</dd>";
            }
        }
        return "$result</dl>";
    }

    /**
    * {@inheritDoc}
    */
    protected function fromImage(&$data)
    {
        $prefix = '<!DOCTYPE html><html>';
        $prefix .= '<head><meta charset="utf-8"><title>HTML generated by Datagator</title></head><body>';
        $suffix = '</body></html>';
        return $prefix . $data . $suffix;
    }
}
