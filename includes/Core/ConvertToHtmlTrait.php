<?php

/**
 * Trait ConvertToHtmlTrait.
 *
 * @package    ApiOpenStudio\Core
 * @author     john89 (https://gitlab.com/john89)
 * @copyright  2020-2030 Naala Pty Ltd
 * @license    This Source Code Form is subject to the terms of the ApiOpenStudio Public License.
 *             If a copy of the license was not distributed with this file,
 *             You can obtain one at https://www.apiopenstudio.com/license/.
 * @link       https://www.apiopenstudio.com
 */

namespace ApiOpenStudio\Core;

/**
 * Trait ConvertToHtmlTrait.
 *
 * Class to cast an input value to HTML.
 */
trait ConvertToHtmlTrait
{
    /**
     * Convert empty to HTML.
     *
     * @param $data
     *
     * @return string|null
     */
    public function fromEmptyToHtml($data): ?string
    {
        return null;
    }

    /**
     * Convert boolean to HTML string.
     *
     * @param $data
     *
     * @return string
     */
    public function fromBooleanToHtml($data): string
    {
        return $this->wrapDataHtmlFormat($data ? 'true' : 'false');
    }

    /**
     * Convert integer to HTML string.
     *
     * @param $data
     *
     * @return string
     */
    public function fromIntegerToHtml($data): string
    {
        return $this->wrapDataHtmlFormat($data);
    }

    /**
     * Convert float to HTML string.
     *
     * @param $data
     *
     * @return string
     */
    public function fromFloatToHtml($data): string
    {
        return $this->wrapDataHtmlFormat($data);
    }

    /**
     * Convert text to HTML string.
     *
     * @param $data
     *
     * @return string
     */
    public function fromTextToHtml($data): string
    {
        return $this->wrapDataHtmlFormat($data);
    }

    /**
     * Convert array to HTML string.
     *
     * @param $data
     *
     * @return string
     *
     * @throws ApiException
     */
    public function fromArrayToHtml($data): string
    {
        $arrayString = '<dl>';
        foreach ($data as $key => $val) {
            if (is_array($val)) {
                $val = $this->fromArrayToHtml($val);
            }
            $arrayString .= "<dt>$key</dt><dd>$val</dd>";
        }
        $arrayString .= '</dl>';
        return $this->wrapDataHtmlFormat($arrayString);
    }

    /**
     * Convert JSON string to HTML string.
     *
     * @param $data
     *
     * @return string
     *
     * @throws ApiException
     */
    public function fromJsonToHtml($data): string
    {
        $array = json_decode($data, true);
        return $this->fromArrayToHtml($array);
    }

    /**
     * Convert HTML string to HTML string.
     *
     * @param $data
     *
     * @return string
     */
    public function fromXmlToHtml($data): string
    {
        return $data;
    }

    /**
     * Convert an HTML string to HTML string.
     *
     * @param $data
     *
     * @return string
     */
    public function fromHtmlToHtml($data): string
    {
        return $data;
    }

    /**
     * Convert an image string to HTML string.
     *
     * @param $data
     *
     * @return string
     */
    public function fromImageToHtml($data): string
    {
        return $this->wrapDataHtmlFormat($data);
    }

    /**
     * Convert file to HTML string.
     *
     * @param $data
     *
     * @return string
     */
    public function fromFileToHtml($data): string
    {
        return $this->wrapDataHtmlFormat($data);
    }

    /**
     * Wrap Data in HTML string wrapper.
     *
     * @param $data
     *
     * @return string
     */
    protected function wrapDataHtmlFormat($data): string
    {
        $prefix = '<!DOCTYPE html><html>';
        $prefix .= '<head><meta charset="utf-8"><title>HTML generated by ApiOpenStudio</title></head><body>';
        $suffix = '</body></html>';
        return $prefix . $data . $suffix;
    }
}
