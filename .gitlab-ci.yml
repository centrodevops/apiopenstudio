# GitLab pipelines definition.
#
# @package   ApiOpenStudio
# @license   This Source Code Form is subject to the terms of the ApiOpenStudio Public License.
#            If a copy of the license was not distributed with this file,
#            You can obtain one at https://www.apiopenstudio.com/license/.
# @author    john89 (https://gitlab.com/john89)
# @copyright 2020-2030 Naala Pty Ltd
# @link      https://www.apiopenstudio.com

image: php:7.4

#cache:
#  key: "$CI_COMMIT_REF_SLUG"
#  paths:
#    - vendor/
#    - .composer/
#    - composer.lock

before_script:
  - apt-get update
  - apt-get install -y libzip-dev openssh-client rsync libxslt-dev unzip
  - docker-php-ext-install zip xsl
  - eval $(ssh-agent -s)
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
  - php composer-setup.php
  - php -r "unlink('composer-setup.php');"
  - php composer.phar install

stages:
  - test
  - deploy_wiki
  - deploy_phpdoc

##################################
## TESTS
##################################

tests:
  stage: test
  services:
    - mariadb:latest
  variables:
    MYSQL_ROOT_PASSWORD: $CI_MYSQL_ROOT_PASSWORD
    MYSQL_USERNAME: $CI_MYSQL_USERNAME
    MYSQL_PASSWORD: $CI_MYSQL_PASSWORD
    ADMIN_NAME: $CI_ADMIN_NAME
    ADMIN_PASS: $CI_ADMIN_PASS
    ADMIN_EMAIL: $CI_ADMIN_EMAIL
  only:
    - merge_request
  artifacts:
    when: on_failure
    paths:
      - phpcs.txt
      - tests/_output/
      - logs/
  script:
    - echo "Setting up for unit tests."
    - cp tests/ci.env .env
    - cp tests/ci.settings.yml settings.yml
    - ssh-keygen -t rsa -y -P "" -b 4096 -m PEM -f jwtRS256.key
    - ssh-keygen -e -m PEM -y -f jwtRS256.key > jwtRS256.key.pub
    - >
      if [ $MYSQL_USERNAME != null ]; then
        sed -i -e "s/username: apiopenstudio/username: ${MYSQL_USERNAME}/g" settings.yml
      fi
    - >
      if [ $MYSQL_PASSWORD != null ]; then
        sed -i -e "s/password: apiopenstudio/password: ${MYSQL_PASSWORD}/g" settings.yml
      fi
    - >
      if [ -z "$ADMIN_NAME" ]; then
        ADMIN_NAME="admin"
      fi
    - >
      if [ -z "$ADMIN_PASS" ]; then
        ADMIN_PASS="secret"
      fi
    - >
      if [ -z "$ADMIN_EMAIL" ]; then
        ADMIN_EMAIL="deadletter@apiopenstudio.com"
      fi
    - echo "Linting the codebase."
    - ./vendor/bin/phpcs --standard=PSR12 --report-file=phpcs.txt includes/ public/*.php tests/api/ tests/_support/Helper/ tests/runner_generate_db.php
    - echo "Running api unit tests."
    - ./vendor/bin/codecept run unit --env ci
    - echo "Setting up for functional tests."
    - apt-get install -y mariadb-client iproute2
    - docker-php-ext-install mysqli
    - mysql --version
    - php tests/runner_generate_db.php
    - echo "Running api functional tests."
    - PHP_CLI_SERVER_WORKERS=10 php -S localhost:8085 -t public/ tests/routing.php &>/dev/null&
    - ./vendor/bin/codecept run api --env ci

##################################
## WIKI
##################################

wiki_dev:
  stage: deploy_wiki
  only:
    - develop
  script:
    - echo "Compile and deploy the wiki to dev."
    - ./vendor/bin/bookdown includes/wiki/bookdown.json
    - ssh-keyscan "$DEV_WIKI_URL" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - rsync -rvI --delete --exclude=".*" "$CI_PROJECT_DIR/public/wiki/" "$DEV_DEPLOYER"@"$DEV_WIKI_URL":"$DEV_WIKI_PATH/"
    - ssh "$DEV_DEPLOYER"@"$DEV_WIKI_URL" "sudo chown -R $DEV_DEPLOYER:www-data $DEV_WIKI_PATH/*"

wiki_prod:
  stage: deploy_wiki
  only:
    - master
  script:
    - echo "Compile and deploy the wiki to prod."
    - ./vendor/bin/bookdown includes/wiki/bookdown.json
    - ssh-keyscan "$PROD_WIKI_URL" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - rsync -rvI --delete --exclude=".*" "$CI_PROJECT_DIR/public/wiki/" "$PROD_DEPLOYER"@"$PROD_WIKI_URL":"$PROD_WIKI_PATH/"
    - ssh "$PROD_DEPLOYER"@"$PROD_WIKI_URL" "sudo chown -R $PROD_DEPLOYER:www-data $PROD_WIKI_PATH/*"
    - ssh "$PROD_DEPLOYER"@"$PROD_WIKI_URL" "php $SITEMAP_GENERATOR file=$PROD_WIKI_PATH/sitemap.xml site=https://$PROD_WIKI_URL"

##################################
## PHPDOC
##################################

phpdoc_dev:
  stage: deploy_phpdoc
  only:
    - develop
  script:
    - echo "Compile and deploy the phpdoc to dev."
    - php -r "copy('https://github.com/phpDocumentor/phpDocumentor/releases/download/v2.9.0/phpDocumentor.phar', 'phpDocumentor.phar');"
    - cp phpDocumentor.phar /usr/local/bin/
    - php /usr/local/bin/phpDocumentor.phar -d "$CI_PROJECT_DIR/" -t "$CI_PROJECT_DIR/public/phpdoc" --ignore vendor/,tests/
    - ssh-keyscan "$DEV_PHPDOC_URL" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - rsync -rvI --delete --exclude=".*" "$CI_PROJECT_DIR/public/phpdoc/" "$DEV_DEPLOYER"@"$DEV_PHPDOC_URL":"$DEV_PHPDOC_PATH/"
    - ssh "$DEV_DEPLOYER"@"$DEV_PHPDOC_URL" "sudo chown -R $DEV_DEPLOYER:www-data $DEV_PHPDOC_PATH/*"

phpdoc_prod:
  stage: deploy_phpdoc
  only:
    - master
  script:
    - echo "Compile and deploy the phpdoc to prod."
    - php -r "copy('https://github.com/phpDocumentor/phpDocumentor/releases/download/v2.9.0/phpDocumentor.phar', 'phpDocumentor.phar');"
    - cp phpDocumentor.phar /usr/local/bin/
    - php /usr/local/bin/phpDocumentor.phar -d "$CI_PROJECT_DIR/" -t "$CI_PROJECT_DIR/public/phpdoc" --ignore vendor/,tests/
    - ssh-keyscan "$PROD_PHPDOC_URL" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - rsync -rvI --delete --exclude=".*" "$CI_PROJECT_DIR/public/phpdoc/" "$PROD_DEPLOYER"@"$PROD_PHPDOC_URL":"$PROD_PHPDOC_PATH/"
    - ssh "$PROD_DEPLOYER"@"$PROD_PHPDOC_URL" "sudo chown -R $PROD_DEPLOYER:www-data $PROD_PHPDOC_PATH/*"
    - ssh "$PROD_DEPLOYER"@"$PROD_PHPDOC_URL" "php $SITEMAP_GENERATOR file=$PROD_PHPDOC_PATH/sitemap.xml site=https://$PROD_PHPDOC_URL"
