# GitLab pipelines definition.
#
# @package   ApiOpenStudio
# @license   This Source Code Form is subject to the terms of the ApiOpenStudio Public License.
#            If a copy of the license was not distributed with this file,
#            You can obtain one at https://www.apiopenstudio.com/license/.
# @author    john89 (https://gitlab.com/john89)
# @copyright 2020-2030 Naala Pty Ltd
# @link      https://www.apiopenstudio.com

image: naala89/aos-nginx-php:7.4

#cache:
#  key: "$CI_COMMIT_REF_SLUG"
#  paths:
#    - vendor/
#    - .composer/
#    - composer.lock

stages:
  - test
  - deploy_wiki
  - deploy_phpdoc

##################################
## TESTS
##################################

tests:
  stage: test
  services:
    - mariadb:latest
  variables:
    MYSQL_ROOT_PASSWORD: apiopenstudio
    MYSQL_USERNAME: apiopenstudio
    MYSQL_PASSWORD: apiopenstudio
  only:
    - merge_request
  artifacts:
    when: on_failure
    paths:
      - phpcs.txt
      - tests/_output/
      - log/
  script:
    - echo "Setting up for tests."
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - cp -Rp ${CI_PROJECT_DIR}/* /www/
    - cd /www
# set ApiOpenStudio test .env and settings.yml
    - cp tests/ci.env .env
    - cp tests/ci.settings.yml settings.yml
    - >
      if [ -z "$ADMIN_NAME" ]; then
        eval export ADMIN_NAME="admin"
      fi
    - >
      if [ -z "$ADMIN_PASS" ]; then
        eval export ADMIN_PASS="secret"
      fi
    - >
      if [ -z "$ADMIN_EMAIL" ]; then
        eval export ADMIN_EMAIL="deadletter@apiopenstudio.com"
      fi
    - composer install
# Linting
    - echo "Linting the codebase."
    - ./vendor/bin/phpcs --standard=PSR12 --report-file=phpcs.txt includes/ public/*.php tests/api/ tests/_support/Helper/ tests/runner_generate_db.php
# Unit tests
    - echo "Running api unit tests."
    - ./vendor/bin/codecept run --env ci unit
# Install MySQL
    - echo "Setting up the DB for functional tests."
    - mysql --version
    - php tests/runner_generate_db.php
# Create JWT token keys
    - ssh-keygen -t rsa -b 4096 -P "" -m PEM -f jwt.key
    - openssl rsa -in jwt.key -pubout -outform PEM -out jwt.key.pub
    - chmod 777 jwt.key.pub jwt.key
# Run functional tests
    - echo "Running api functional tests."
    - ./vendor/bin/codecept build
    - ./vendor/bin/codecept run --env ci api

##################################
## WIKI
##################################

wiki_dev:
  stage: deploy_wiki
  only:
    - develop
  script:
    - echo "Compile and deploy the wiki to dev."
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - composer install
    - ./vendor/bin/bookdown includes/wiki/bookdown.json
    - ssh-keyscan "$DEV_WIKI_URL" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - rsync -rvI --delete --exclude=".*" "$CI_PROJECT_DIR/public/wiki/" "$DEV_DEPLOYER"@"$DEV_WIKI_URL":"$DEV_WIKI_PATH/"
    - ssh "$DEV_DEPLOYER"@"$DEV_WIKI_URL" "sudo chown -R $DEV_DEPLOYER:www-data $DEV_WIKI_PATH/*"

wiki_prod:
  stage: deploy_wiki
  only:
    - master
  script:
    - echo "Compile and deploy the wiki to prod."
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - composer install
    - ./vendor/bin/bookdown includes/wiki/bookdown.json
    - ssh-keyscan "$PROD_WIKI_URL" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - rsync -rvI --delete --exclude=".*" "$CI_PROJECT_DIR/public/wiki/" "$PROD_DEPLOYER"@"$PROD_WIKI_URL":"$PROD_WIKI_PATH/"
    - ssh "$PROD_DEPLOYER"@"$PROD_WIKI_URL" "sudo chown -R $PROD_DEPLOYER:www-data $PROD_WIKI_PATH/*"
    - ssh "$PROD_DEPLOYER"@"$PROD_WIKI_URL" "php $SITEMAP_GENERATOR file=$PROD_WIKI_PATH/sitemap.xml site=https://$PROD_WIKI_URL"

##################################
## PHPDOC
##################################

phpdoc_dev:
  image:
    name: naala89/aos-phpdoc:latest
    entrypoint: [ "" ]
  stage: deploy_phpdoc
  only:
    - develop
  variables:
    PHPDOC_OUTPUT: "/public/phpdoc"
    PHPDOC_CONFIG_FILE: ""
    PHPDOC_TITLE: "ApiOpenStudio PHPDoc"
    PHPDOC_VERBOSITY: ""
    PHPDOC_TEMPLATE: ""
    PHPDOC_INCLUDE_HIDDEN: "false"
    PHPDOC_IGNORE_SYMLINKS: "false"
    PHPDOC_MARKERS: ""
    PHPDOC_OPTIONS: "--ignore vendor/,tests/"
    PROJECT_ROOT: "/"
  script:
    - echo "Compile and deploy the phpdoc to dev."
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - ssh-keyscan "$DEV_PHPDOC_URL" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    # Define verbosity
    - if [ ! -z "$PHPDOC_VERBOSITY" ]; then export PHPDOC_OPTIONS="-$PHPDOC_VERBOSITY $PHPDOC_OPTIONS"; fi
    # Define template
    - if [ ! -z "$PHPDOC_TEMPLATE" ]; then export PHPDOC_OPTIONS="--template=$PHPDOC_TEMPLATE $PHPDOC_OPTIONS"; fi
    # Include config file
    - if [ ! -z "$PHPDOC_CONFIG_FILE" ]; then export PHPDOC_OPTIONS="--config=$CI_PROJECT_DIR$PHPDOC_CONFIG_FILE $PHPDOC_OPTIONS"; fi
    # Include hidden files
    - if [ ! "$PHPDOC_INCLUDE_HIDDEN" = "true" ]; then export PHPDOC_OPTIONS="--hidden $PHPDOC_OPTIONS"; fi
    # Include if ignore symlinks
    - if [ ! "$PHPDOC_IGNORE_SYMLINKS" = "true" ]; then export PHPDOC_OPTIONS="--ignore-symlinks $PHPDOC_OPTIONS"; fi
    # Include markers
    - if [ ! "$PHPDOC_MARKERS" = "true" ]; then export PHPDOC_OPTIONS="--markers=$PHPDOC_MARKERS $PHPDOC_OPTIONS"; fi
    - /opt/phpdoc/bin/phpdoc -d ${CI_PROJECT_DIR}${PROJECT_ROOT} -t ${CI_PROJECT_DIR}${PHPDOC_OUTPUT} --title="$PHPDOC_TITLE" ${PHPDOC_OPTIONS}
    - rsync -rvI --delete --exclude=".*" "$CI_PROJECT_DIR/public/phpdoc/" "$DEV_DEPLOYER"@"$DEV_PHPDOC_URL":"$DEV_PHPDOC_PATH/"
    - ssh "$DEV_DEPLOYER"@"$DEV_PHPDOC_URL" "sudo chown -R $DEV_DEPLOYER:www-data $DEV_PHPDOC_PATH/*"

phpdoc_prod:
  image:
    name: naala89/aos-phpdoc:latest
    entrypoint: [ "" ]
  stage: deploy_phpdoc
  only:
    - master
  variables:
    PHPDOC_OUTPUT: "/public/phpdoc"
    PHPDOC_CONFIG_FILE: ""
    PHPDOC_TITLE: "ApiOpenStudio PHPDoc"
    PHPDOC_VERBOSITY: ""
    PHPDOC_TEMPLATE: ""
    PHPDOC_INCLUDE_HIDDEN: "false"
    PHPDOC_IGNORE_SYMLINKS: "false"
    PHPDOC_MARKERS: ""
    PHPDOC_OPTIONS: "--ignore vendor/,tests/"
    PROJECT_ROOT: "/"
  script:
    - echo "Compile and deploy the phpdoc to prod."
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - ssh-keyscan "$DEV_PHPDOC_URL" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    # Define verbosity
    - if [ ! -z "$PHPDOC_VERBOSITY" ]; then export PHPDOC_OPTIONS="-$PHPDOC_VERBOSITY $PHPDOC_OPTIONS"; fi
    # Define template
    - if [ ! -z "$PHPDOC_TEMPLATE" ]; then export PHPDOC_OPTIONS="--template=$PHPDOC_TEMPLATE $PHPDOC_OPTIONS"; fi
    # Include config file
    - if [ ! -z "$PHPDOC_CONFIG_FILE" ]; then export PHPDOC_OPTIONS="--config=$CI_PROJECT_DIR$PHPDOC_CONFIG_FILE $PHPDOC_OPTIONS"; fi
    # Include hidden files
    - if [ ! "$PHPDOC_INCLUDE_HIDDEN" = "true" ]; then export PHPDOC_OPTIONS="--hidden $PHPDOC_OPTIONS"; fi
    # Include if ignore symlinks
    - if [ ! "$PHPDOC_IGNORE_SYMLINKS" = "true" ]; then export PHPDOC_OPTIONS="--ignore-symlinks $PHPDOC_OPTIONS"; fi
    # Include markers
    - if [ ! "$PHPDOC_MARKERS" = "true" ]; then export PHPDOC_OPTIONS="--markers=$PHPDOC_MARKERS $PHPDOC_OPTIONS"; fi
    - /opt/phpdoc/bin/phpdoc -d ${CI_PROJECT_DIR}${PROJECT_ROOT} -t ${PHPDOC_OUTPUT} --title="$PHPDOC_TITLE" ${PHPDOC_OPTIONS}
    - rsync -rvI --delete --exclude=".*" "$CI_PROJECT_DIR/public/phpdoc/" "$PROD_DEPLOYER"@"$PROD_PHPDOC_URL":"$PROD_PHPDOC_PATH/"
    - ssh "$PROD_DEPLOYER"@"$PROD_PHPDOC_URL" "sudo chown -R $PROD_DEPLOYER:www-data $PROD_PHPDOC_PATH/*"
    - ssh "$PROD_DEPLOYER"@"$PROD_PHPDOC_URL" "php $SITEMAP_GENERATOR file=$PROD_PHPDOC_PATH/sitemap.xml site=https://$PROD_PHPDOC_URL"
