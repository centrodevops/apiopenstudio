# GitLab pipelines definition.
#
# @package   ApiOpenStudio
# @license   This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
#            If a copy of the MPL was not distributed with this file,
#            You can obtain one at https://mozilla.org/MPL/2.0/.
# @author    john89 (https://gitlab.com/john89)
# @copyright 2020-2030 ApiOpenStudio
# @link      https://www.apiopenstudio.com

image: php:7.4

#cache:
#  key: "$CI_COMMIT_REF_SLUG"
#  paths:
#    - vendor/
#    - .composer/
#    - composer.lock

variables:
  MYSQL_HOST: ${MYSQL_TEST_HOST}
  MYSQL_ROOT_PASSWORD: ${MYSQL_TEST_ROOT_PASSWORD}
  MYSQL_DATABASE: ${MYSQL_TEST_DATABASE}
  MYSQL_USERNAME: ${MYSQL_TEST_USERNAME}
  MYSQL_PASSWORD: ${MYSQL_TEST_PASSWORD}

.setup_ssh: &setup_ssh |
  apt-get update
  apt-get install -y libzip-dev openssh-client rsync libxslt-dev unzip
  docker-php-ext-install zip xsl
  eval $(ssh-agent -s)
  mkdir -p ~/.ssh
  chmod 700 ~/.ssh
  echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

.composer_install: &composer_install |
  php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
  php composer-setup.php
  php -r "unlink('composer-setup.php');"
  php composer.phar install

stages:
  - lint
  - test
  - deploy

##################################
## LINTING
##################################

phpcs:
  stage: lint
  script:
    - echo "Linting the codebase."
    - *setup_ssh
    - *composer_install
    - ./vendor/bin/phpcs --standard=PSR12 includes/ src/scss/ src/js/ public/*.php public/admin/*.php *.js

##################################
## TESTS
##################################

functional_tests:
  stage: test
  services:
    - mariadb:latest
  script:
    - echo "Running functional tests."
    - *setup_ssh
    - *composer_install
    - apt-get install -y mariadb-client
    - docker-php-ext-install mysqli
    - mysql --version
    - php composer.phar install
    - echo "Setup the DB."
    - php ./includes/scripts/runner_generate_db.php

#unit_tests:
#  stage: test

##################################
## WIKI
##################################

wiki_dev:
  stage: deploy
  only:
    - develop
  script:
    - echo "Compile and deploy the wiki to dev."
    - *setup_ssh
    - *composer_install
    - ./vendor/bin/bookdown src/wiki/bookdown.json
    - ssh-keyscan "$DEV_WIKI_URL" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - rsync -rvI --delete --exclude=".*" "/wiki/" "$DEV_DEPLOYER"@"$DEV_WIKI_URL":"$DEV_WIKI_PATH/"
    - rsync -rvI "$CI_PROJECT_DIR/src/wiki/images" "$DEV_DEPLOYER"@"$DEV_WIKI_URL":"$DEV_WIKI_PATH/"
    - ssh "$DEV_DEPLOYER"@"$DEV_WIKI_URL" "sudo chown -R $DEV_DEPLOYER:www-data $DEV_WIKI_PATH/*"

wiki_prod:
  stage: deploy
  only:
    - master
  script:
    - echo "Compile and deploy the wiki to prod."
    - *setup_ssh
    - *composer_install
    - ./vendor/bin/bookdown src/wiki/bookdown.json
    - ssh-keyscan "$PROD_WIKI_URL" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - rsync -rvI --delete --exclude=".*" "/wiki/" "$PROD_DEPLOYER"@"$PROD_WIKI_URL":"$PROD_WIKI_PATH/"
    - rsync -rvI "$CI_PROJECT_DIR/src/wiki/images" "$PROD_DEPLOYER"@"$PROD_WIKI_URL":"$PROD_WIKI_PATH/"
    - ssh "$PROD_DEPLOYER"@"$PROD_WIKI_URL" "sudo chown -R $PROD_DEPLOYER:www-data $PROD_WIKI_PATH/*"

##################################
## PHPDOC
##################################

phpdoc_dev:
  stage: deploy
  only:
    - develop
  script:
    - echo "Compile and deploy the phpdoc to dev."
    - *setup_ssh
    - php -r "copy('https://github.com/phpDocumentor/phpDocumentor/releases/download/v2.9.0/phpDocumentor.phar', 'phpDocumentor.phar');"
    - cp phpDocumentor.phar /usr/local/bin/
    - php /usr/local/bin/phpDocumentor.phar -d "$CI_PROJECT_DIR/" -t "$CI_PROJECT_DIR/public/phpdoc" --ignore vendor/,tests/
    - ssh-keyscan "$DEV_PHPDOC_URL" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - rsync -rvI --delete --exclude=".*" "$CI_PROJECT_DIR/public/phpdoc/" "$DEV_DEPLOYER"@"$DEV_PHPDOC_URL":"$DEV_PHPDOC_PATH/"
    - ssh "$DEV_DEPLOYER"@"$DEV_PHPDOC_URL" "sudo chown -R $DEV_DEPLOYER:www-data $DEV_PHPDOC_PATH/*"

phpdoc_prod:
  stage: deploy
  only:
    - master
  script:
    - echo "Compile and deploy the phpdoc to prod."
    - *setup_ssh
    - php -r "copy('https://github.com/phpDocumentor/phpDocumentor/releases/download/v2.9.0/phpDocumentor.phar', 'phpDocumentor.phar');"
    - cp phpDocumentor.phar /usr/local/bin/
    - php /usr/local/bin/phpDocumentor.phar -d "$CI_PROJECT_DIR/" -t "$CI_PROJECT_DIR/public/phpdoc" --ignore vendor/,tests/
    - ssh-keyscan "$PROD_PHPDOC_URL" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - rsync -rvI --delete --exclude=".*" "$CI_PROJECT_DIR/public/phpdoc/" "$PROD_DEPLOYER"@"$PROD_PHPDOC_URL":"$PROD_PHPDOC_PATH/"
    - ssh "$PROD_DEPLOYER"@"$PROD_PHPDOC_URL" "sudo chown -R $PROD_DEPLOYER:www-data $PROD_PHPDOC_PATH/*"
