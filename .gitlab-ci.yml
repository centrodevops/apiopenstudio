# GitLab     pipelines definition.
#
# @package   Gaterdata
# @license   This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0.
#            If a copy of the MPL was not distributed with this file,
#            You can obtain one at https://mozilla.org/MPL/2.0/.
# @author    john89 (https://gitlab.com/john89)
# @copyright 2020-2030 GaterData
# @link      https://gaterdata.com

image: php:7.3

cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - vendor/
    - .composer/

variables:
  MYSQL_HOST: ${MYSQL_TEST_HOST}
  MYSQL_DATABASE: ${MYSQL_TEST_DATABASE}
  MYSQL_ROOT_USERNAME: ${MYSQL_TEST_ROOT_USERNAME}
  MYSQL_ROOT_PASSWORD: ${MYSQL_TEST_ROOT_PASSWORD}

before_script:
  - apt-get update
  - apt-get install -y libzip-dev openssh-client rsync libxslt-dev unzip
  - docker-php-ext-install zip xsl
  - eval $(ssh-agent -s)
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
  - php composer-setup.php
  - php -r "unlink('composer-setup.php');"

stages:
  - lint
  - test
  - deploy

phpcs:
  stage: lint
  script:
    - php composer.phar install
    - ./vendor/bin/phpcs includes/ src/scss/ src/js/

functional_tests:
  stage: test
  services:
    - mariadb:latest
  script:
    - echo "Running functional tests."
    - php composer.phar install
    - echo "Setup the DB."
    - apt-get install -y mariadb-client
    - docker-php-ext-install mysqli
    - mysql --version
    - php ./includes/scripts/runner_generate_db.php


#unit_tests:
#  stage: test

deploy_wiki_develop:
  stage: deploy
  only:
    - develop
  script:
    - echo "Compile and deploy the wiki to dev."
    - php composer.phar install
    - ./vendor/bin/bookdown src/wiki/bookdown.json
    - ssh-keyscan "$DEV_WIKI_URL" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - rsync -rvI --delete --exclude=".*" "/wiki/" "$DEV_DEPLOYER"@"$DEV_WIKI_URL":"$DEV_WIKI_PATH/"
    - rsync -rvI "$CI_PROJECT_DIR/src/wiki/images" "$DEV_DEPLOYER"@"$DEV_WIKI_URL":"$DEV_WIKI_PATH/"
    - ssh "$DEV_DEPLOYER"@"$DEV_WIKI_URL" "sudo chown -R $DEV_DEPLOYER:www-data $DEV_WIKI_PATH/*"

deploy_phpdoc_develop:
  stage: deploy
  only:
    - develop
  script:
    - echo "Compile and deploy the phpdoc to dev."
    - php composer.phar install
    - ./vendor/bin/phpdox
    - ssh-keyscan "$DEV_PHPDOC_URL" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - rsync -rvI --delete --exclude=".*" "public/phpdoc/html/" "$DEV_DEPLOYER"@"$DEV_PHPDOC_URL":"$DEV_PHPDOC_PATH/"
    - ssh "$DEV_DEPLOYER"@"$DEV_PHPDOC_URL" "sudo chown -R $DEV_DEPLOYER:www-data $DEV_PHPDOC_PATH/*"

#deploy_wiki_master:
#  stage: deploy
#  script:
#    - rsync -rvI --delete --exclude=".*" "/wiki/" "$PROD_DEPLOYER"@"$PROD_WIKI_URL":"$PROD_WIKI_PATH/"
#    - ssh "$PROD_DEPLOYER"@"$PROD_WIKI_URL" "sudo chown -R $PROD_DEPLOYER:www-data $WIKI_PATH/*"
#  only:
#    - master

#deploy_phpdoc_master:
#  stage: deploy
#  script:
#    - rsync -rvI --delete --exclude=".*" "/phpdoc/" "$PROD_DEPLOYER"@"$PROD_PHPDOC_URL":"$PROD_PHPDOC_PATH/"
#    - ssh "$PROD_DEPLOYER"@"$PROD_PHPDOC_URL" "sudo chown -R $PROD_DEPLOYER:www-data $PROD_PHPDOC_PATH/*"
#  only:
#    - master
