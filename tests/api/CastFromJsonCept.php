<?php

$I = new ApiTester($scenario);

$I->comment('Testing with json literal 0');
$uri = $I->getMyBaseUri() . '/cast/json';
$yamlFilename = 'castJson0.yaml';
$I->performLogin(getenv('TESTER_DEVELOPER_NAME'), getenv('TESTER_DEVELOPER_PASS'));
$I->createResourceFromYaml($yamlFilename);

$I->wantTo('Test cast 0 to array.');
$I->sendGet($uri, ['data_type' => 'array']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => [0],
]);

$I->wantTo('Test cast 0 to boolean.');
$I->sendGet($uri, ['data_type' => 'boolean']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => false,
]);

$I->wantTo('Test cast 0 to empty.');
$I->sendGet($uri, ['data_type' => 'empty']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => null,
]);

$I->wantTo('Test cast 0 to float.');
$I->sendGet($uri, ['data_type' => 'float']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => 0.0,
]);

$I->wantTo('Test cast 0 to html.');
$I->sendGet($uri, ['data_type' => 'html']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => [
        'html' => [
            ['_lang' => 'en-us'],
            [
                'head' => [
                    [
                        'meta' => [
                            ['_charset' => 'utf-8'],
                        ],
                    ], [
                        'title' => [
                            ['#text' => 'HTML generated by ApiOpenStudio'],
                        ],
                    ],
                ],
            ], [
                "body" => [
                    [
                        "div" => [
                            ["#text" => "0"],
                        ],
                    ],
                ],
            ],
        ],
    ],
]);

$I->wantTo('Test cast 0 to image.');
$I->sendGet($uri, ['data_type' => 'image']);
$I->seeResponseCodeIs(400);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'error',
    'data' => [
        'code' => 6,
        'id' => 'test cast json zero cast',
        'message' => 'Cannot cast JSON to image.',
    ],
]);

$I->wantTo('Test cast 0 to integer.');
$I->sendGet($uri, ['data_type' => 'integer']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => 0,
]);

$I->wantTo('Test cast -34 to json.');
$I->sendGet($uri, ['data_type' => 'json']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => 0,
]);

$I->wantTo('Test cast -34 to text.');
$I->sendGet($uri, ['data_type' => 'text']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => '0',
]);

$I->wantTo('Test cast 0 to xml.');
$I->sendGet($uri, ['data_type' => 'xml']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => [
        'apiOpenStudioWrapper' => [
            'item' => 0,
        ],
    ],
]);

$I->tearDownTestFromYaml($yamlFilename);

$I->comment('Testing with json literal 1');
$uri = $I->getMyBaseUri() . '/cast/json';
$yamlFilename = 'castJson1.yaml';
$I->createResourceFromYaml($yamlFilename);

$I->wantTo('Test cast 1 to array.');
$I->sendGet($uri, ['data_type' => 'array']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => [1],
]);

$I->wantTo('Test cast 1 to boolean.');
$I->sendGet($uri, ['data_type' => 'boolean']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => true,
]);

$I->wantTo('Test cast 1 to empty.');
$I->sendGet($uri, ['data_type' => 'empty']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => null,
]);

$I->wantTo('Test cast 1 to float.');
$I->sendGet($uri, ['data_type' => 'float']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => 1.0,
]);

$I->wantTo('Test cast 1 to html.');
$I->sendGet($uri, ['data_type' => 'html']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => [
        'html' => [
            ['_lang' => 'en-us'],
            [
                'head' => [
                    [
                        'meta' => [
                            ['_charset' => 'utf-8'],
                        ],
                    ], [
                        'title' => [
                            ['#text' => 'HTML generated by ApiOpenStudio'],
                        ],
                    ],
                ],
            ], [
                "body" => [
                    [
                        "div" => [
                            ["#text" => "1"],
                        ],
                    ],
                ],
            ],
        ],
    ],
]);

$I->wantTo('Test cast 1 to image.');
$I->sendGet($uri, ['data_type' => 'image']);
$I->seeResponseCodeIs(400);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'error',
    'data' => [
        'code' => 6,
        'id' => 'test cast json one cast',
        'message' => 'Cannot cast JSON to image.',
    ],
]);

$I->wantTo('Test cast 1 to integer.');
$I->sendGet($uri, ['data_type' => 'integer']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => 1,
]);

$I->wantTo('Test cast 1 to json.');
$I->sendGet($uri, ['data_type' => 'json']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => 1,
]);

$I->wantTo('Test cast 1 to text.');
$I->sendGet($uri, ['data_type' => 'text']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => '1',
]);

$I->wantTo('Test cast 1 to xml.');
$I->sendGet($uri, ['data_type' => 'xml']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => [
        'apiOpenStudioWrapper' => [
            'item' => 1,
        ],
    ],
]);

$I->tearDownTestFromYaml($yamlFilename);

$I->comment('Testing with json literal -1');
$uri = $I->getMyBaseUri() . '/cast/json';
$yamlFilename = 'castJson-1.yaml';
$I->createResourceFromYaml($yamlFilename);

$I->wantTo('Test cast -1 to array.');
$I->sendGet($uri, ['data_type' => 'array']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => [-1],
]);

$I->wantTo('Test cast -1 to boolean.');
$I->sendGet($uri, ['data_type' => 'boolean']);
$I->seeResponseCodeIs(400);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'error',
    'data' => [
        'code' => 6,
        'id' => 'test cast json minus one cast',
        'message' => 'Cannot cast JSON to boolean.',
    ],
]);

$I->wantTo('Test cast -1 to empty.');
$I->sendGet($uri, ['data_type' => 'empty']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => null,
]);

$I->wantTo('Test cast -1 to float.');
$I->sendGet($uri, ['data_type' => 'float']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => -1.0,
]);

$I->wantTo('Test cast -1 to html.');
$I->sendGet($uri, ['data_type' => 'html']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => [
        'html' => [
            ['_lang' => 'en-us'],
            [
                'head' => [
                    [
                        'meta' => [
                            ['_charset' => 'utf-8'],
                        ],
                    ], [
                        'title' => [
                            ['#text' => 'HTML generated by ApiOpenStudio'],
                        ],
                    ],
                ],
            ], [
                "body" => [
                    [
                        "div" => [
                            ["#text" => "-1"],
                        ],
                    ],
                ],
            ],
        ],
    ],
]);

$I->wantTo('Test cast -1 to image.');
$I->sendGet($uri, ['data_type' => 'image']);
$I->seeResponseCodeIs(400);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'error',
    'data' => [
        'code' => 6,
        'id' => 'test cast json minus one cast',
        'message' => 'Cannot cast JSON to image.',
    ],
]);

$I->wantTo('Test cast -1 to integer.');
$I->sendGet($uri, ['data_type' => 'integer']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => -1,
]);

$I->wantTo('Test cast -1 to json.');
$I->sendGet($uri, ['data_type' => 'json']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => -1,
]);

$I->wantTo('Test cast -1 to text.');
$I->sendGet($uri, ['data_type' => 'text']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => '-1',
]);

$I->wantTo('Test cast -1 to xml.');
$I->sendGet($uri, ['data_type' => 'xml']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => [
        'apiOpenStudioWrapper' => [
            'item' => -1,
        ],
    ],
]);

$I->tearDownTestFromYaml($yamlFilename);

$I->comment('Testing with json literal -Infinity');
$uri = $I->getMyBaseUri() . '/cast/json';
$yamlFilename = 'castJson-Infinity.yaml';
$I->createResourceFromYaml($yamlFilename);

$I->wantTo('Test cast -Infinity to array.');
$I->sendGet($uri, ['data_type' => 'array']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => ["-Infinity"],
]);

$I->wantTo('Test cast -Infinity to boolean.');
$I->sendGet($uri, ['data_type' => 'boolean']);
$I->seeResponseCodeIs(400);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'error',
    'data' => [
        'code' => 6,
        'id' => 'test cast json -Infinity cast',
        'message' => 'Cannot cast JSON to boolean.',
    ],
]);

$I->wantTo('Test cast -Infinity to empty.');
$I->sendGet($uri, ['data_type' => 'empty']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => null,
]);

$I->wantTo('Test cast -Infinity to float.');
$I->sendGet($uri, ['data_type' => 'float']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => "-Infinity",
]);

$I->wantTo('Test cast -Infinity to html.');
$I->sendGet($uri, ['data_type' => 'html']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => [
        'html' => [
            ['_lang' => 'en-us'],
            [
                'head' => [
                    [
                        'meta' => [
                            ['_charset' => 'utf-8'],
                        ],
                    ], [
                        'title' => [
                            ['#text' => 'HTML generated by ApiOpenStudio'],
                        ],
                    ],
                ],
            ], [
                "body" => [
                    [
                        "div" => [
                            ["#text" => "-Infinity"],
                        ],
                    ],
                ],
            ],
        ],
    ],
]);

$I->wantTo('Test cast -Infinity to image.');
$I->sendGet($uri, ['data_type' => 'image']);
$I->seeResponseCodeIs(400);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'error',
    'data' => [
        'code' => 6,
        'id' => 'test cast json -Infinity cast',
        'message' => 'Cannot cast JSON to image.',
    ],
]);

$I->wantTo('Test cast -Infinity to integer.');
$I->sendGet($uri, ['data_type' => 'integer']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => "-Infinity",
]);

$I->wantTo('Test cast -Infinity to json.');
$I->sendGet($uri, ['data_type' => 'json']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => "-Infinity",
]);

$I->wantTo('Test cast -Infinity to text.');
$I->sendGet($uri, ['data_type' => 'text']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => '-Infinity',
]);

$I->wantTo('Test cast -Infinity to xml.');
$I->sendGet($uri, ['data_type' => 'xml']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => [
        'apiOpenStudioWrapper' => [
            'item' => "-Infinity",
        ],
    ],
]);

$I->tearDownTestFromYaml($yamlFilename);

$I->comment('Testing with json literal empty string');
$uri = $I->getMyBaseUri() . '/cast/json';
$yamlFilename = 'castJsonEmptyString.yaml';
$I->createResourceFromYaml($yamlFilename);

$I->wantTo('Test cast empty string to array.');
$I->sendGet($uri, ['data_type' => 'array']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => [],
]);

$I->wantTo('Test cast empty string to boolean.');
$I->sendGet($uri, ['data_type' => 'boolean']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => null,
]);

$I->wantTo('Test cast empty string to empty.');
$I->sendGet($uri, ['data_type' => 'empty']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => null,
]);

$I->wantTo('Test cast empty string to float.');
$I->sendGet($uri, ['data_type' => 'float']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => null,
]);

$I->wantTo('Test cast empty string to html.');
$I->sendGet($uri, ['data_type' => 'html']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => [
        'html' => [
            ['_lang' => 'en-us'],
            [
                'head' => [
                    [
                        'meta' => [
                            ['_charset' => 'utf-8'],
                        ],
                    ], [
                        'title' => [
                            ['#text' => 'HTML generated by ApiOpenStudio'],
                        ],
                    ],
                ],
            ], [
                "body" => [
                    [
                        "div" => [
                            ["#text" => "null"],
                        ],
                    ],
                ],
            ],
        ],
    ],
]);

$I->wantTo('Test cast empty string to image.');
$I->sendGet($uri, ['data_type' => 'image']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => null,
]);

$I->wantTo('Test cast empty string to integer.');
$I->sendGet($uri, ['data_type' => 'integer']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => null,
]);

$I->wantTo('Test cast empty string to json.');
$I->sendGet($uri, ['data_type' => 'json']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => null,
]);

$I->wantTo('Test cast empty string to text.');
$I->sendGet($uri, ['data_type' => 'text']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => null,
]);

$I->wantTo('Test cast empty string to xml.');
$I->sendGet($uri, ['data_type' => 'xml']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => [
        'apiOpenStudioWrapper' => [
            'item' => [],
        ],
    ],
]);

$I->tearDownTestFromYaml($yamlFilename);

$I->comment('Testing with json literal Infinity');
$uri = $I->getMyBaseUri() . '/cast/json';
$yamlFilename = 'castJsonInfinity.yaml';
$I->createResourceFromYaml($yamlFilename);

$I->wantTo('Test cast Infinity to array.');
$I->sendGet($uri, ['data_type' => 'array']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => ["Infinity"],
]);

$I->wantTo('Test cast Infinity to boolean.');
$I->sendGet($uri, ['data_type' => 'boolean']);
$I->seeResponseCodeIs(400);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'error',
    'data' => [
        'code' => 6,
        'id' => 'test cast json Infinity cast',
        'message' => 'Cannot cast JSON to boolean.',
    ],
]);

$I->wantTo('Test cast Infinity to empty.');
$I->sendGet($uri, ['data_type' => 'empty']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => null,
]);

$I->wantTo('Test cast Infinity to float.');
$I->sendGet($uri, ['data_type' => 'float']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => "Infinity",
]);

$I->wantTo('Test cast Infinity to html.');
$I->sendGet($uri, ['data_type' => 'html']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => [
        'html' => [
            ['_lang' => 'en-us'],
            [
                'head' => [
                    [
                        'meta' => [
                            ['_charset' => 'utf-8'],
                        ],
                    ], [
                        'title' => [
                            ['#text' => 'HTML generated by ApiOpenStudio'],
                        ],
                    ],
                ],
            ], [
                "body" => [
                    [
                        "div" => [
                            ["#text" => "Infinity"],
                        ],
                    ],
                ],
            ],
        ],
    ],
]);

$I->wantTo('Test cast -Infinity to image.');
$I->sendGet($uri, ['data_type' => 'image']);
$I->seeResponseCodeIs(400);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'error',
    'data' => [
        'code' => 6,
        'id' => 'test cast json Infinity cast',
        'message' => 'Cannot cast JSON to image.',
    ],
]);

$I->wantTo('Test cast Infinity to integer.');
$I->sendGet($uri, ['data_type' => 'integer']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => "Infinity",
]);

$I->wantTo('Test cast Infinity to json.');
$I->sendGet($uri, ['data_type' => 'json']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => "Infinity",
]);

$I->wantTo('Test cast Infinity to text.');
$I->sendGet($uri, ['data_type' => 'text']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => 'Infinity',
]);

$I->wantTo('Test cast Infinity to xml.');
$I->sendGet($uri, ['data_type' => 'xml']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => [
        'apiOpenStudioWrapper' => [
            'item' => "Infinity",
        ],
    ],
]);

$I->tearDownTestFromYaml($yamlFilename);

$I->comment('Testing with json literal integer');
$uri = $I->getMyBaseUri() . '/cast/json';
$yamlFilename = 'castJsonInteger.yaml';
$I->createResourceFromYaml($yamlFilename);

$I->wantTo('Test cast integer to array.');
$I->sendGet($uri, ['data_type' => 'array']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => [3141],
]);

$I->wantTo('Test cast integer to boolean.');
$I->sendGet($uri, ['data_type' => 'boolean']);
$I->seeResponseCodeIs(400);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'error',
    'data' => [
        'code' => 6,
        'id' => 'test cast json integer cast',
        'message' => 'Cannot cast JSON to boolean.',
    ],
]);

$I->wantTo('Test cast integer to empty.');
$I->sendGet($uri, ['data_type' => 'empty']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => null,
]);

$I->wantTo('Test cast integer to float.');
$I->sendGet($uri, ['data_type' => 'float']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => 3141.0,
]);

$I->wantTo('Test cast integer to html.');
$I->sendGet($uri, ['data_type' => 'html']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => [
        'html' => [
            ['_lang' => 'en-us'],
            [
                'head' => [
                    [
                        'meta' => [
                            ['_charset' => 'utf-8'],
                        ],
                    ], [
                        'title' => [
                            ['#text' => 'HTML generated by ApiOpenStudio'],
                        ],
                    ],
                ],
            ], [
                "body" => [
                    [
                        "div" => [
                            ["#text" => "3141"],
                        ],
                    ],
                ],
            ],
        ],
    ],
]);

$I->wantTo('Test cast integer to image.');
$I->sendGet($uri, ['data_type' => 'image']);
$I->seeResponseCodeIs(400);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'error',
    'data' => [
        'code' => 6,
        'id' => 'test cast json integer cast',
        'message' => 'Cannot cast JSON to image.',
    ],
]);

$I->wantTo('Test cast integer to integer.');
$I->sendGet($uri, ['data_type' => 'integer']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => 3141,
]);

$I->wantTo('Test cast integer to json.');
$I->sendGet($uri, ['data_type' => 'json']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => 3141,
]);

$I->wantTo('Test cast integer to text.');
$I->sendGet($uri, ['data_type' => 'text']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => '3141',
]);

$I->wantTo('Test cast integer to xml.');
$I->sendGet($uri, ['data_type' => 'xml']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => [
        'apiOpenStudioWrapper' => [
            'item' => "3141",
        ],
    ],
]);

$I->tearDownTestFromYaml($yamlFilename);

$I->comment('Testing with json literal NAN');
$uri = $I->getMyBaseUri() . '/cast/json';
$yamlFilename = 'castJsonNaN.yaml';
$I->createResourceFromYaml($yamlFilename);

$I->wantTo('Test cast NAN to array.');
$I->sendGet($uri, ['data_type' => 'array']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => ["NAN"],
]);

$I->wantTo('Test cast NAN to boolean.');
$I->sendGet($uri, ['data_type' => 'boolean']);
$I->seeResponseCodeIs(400);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'error',
    'data' => [
        'code' => 6,
        'id' => 'test cast json NAN cast',
        'message' => 'Cannot cast JSON to boolean.',
    ],
]);

$I->wantTo('Test cast NAN to empty.');
$I->sendGet($uri, ['data_type' => 'empty']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => null,
]);

$I->wantTo('Test cast NAN to float.');
$I->sendGet($uri, ['data_type' => 'float']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => "NAN",
]);

$I->wantTo('Test cast NAN to html.');
$I->sendGet($uri, ['data_type' => 'html']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => [
        'html' => [
            ['_lang' => 'en-us'],
            [
                'head' => [
                    [
                        'meta' => [
                            ['_charset' => 'utf-8'],
                        ],
                    ], [
                        'title' => [
                            ['#text' => 'HTML generated by ApiOpenStudio'],
                        ],
                    ],
                ],
            ], [
                "body" => [
                    [
                        "div" => [
                            ["#text" => "NAN"],
                        ],
                    ],
                ],
            ],
        ],
    ],
]);

$I->wantTo('Test cast NAN to image.');
$I->sendGet($uri, ['data_type' => 'image']);
$I->seeResponseCodeIs(400);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'error',
    'data' => [
        'code' => 6,
        'id' => 'test cast json NAN cast',
        'message' => 'Cannot cast JSON to image.',
    ],
]);

$I->wantTo('Test cast NAN to integer.');
$I->sendGet($uri, ['data_type' => 'integer']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => "NAN",
]);

$I->wantTo('Test cast NAN to json.');
$I->sendGet($uri, ['data_type' => 'json']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => "NAN",
]);

$I->wantTo('Test cast NAN to text.');
$I->sendGet($uri, ['data_type' => 'text']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => 'NAN',
]);

$I->wantTo('Test cast NAN to xml.');
$I->sendGet($uri, ['data_type' => 'xml']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => [
        'apiOpenStudioWrapper' => [
            'item' => "NAN",
        ],
    ],
]);

$I->tearDownTestFromYaml($yamlFilename);

$I->comment('Testing with json literal null');
$uri = $I->getMyBaseUri() . '/cast/json';
$yamlFilename = 'castJsonNull.yaml';
$I->createResourceFromYaml($yamlFilename);

$I->wantTo('Test cast null to array.');
$I->sendGet($uri, ['data_type' => 'array']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => [],
]);

$I->wantTo('Test cast null to boolean.');
$I->sendGet($uri, ['data_type' => 'boolean']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => null,
]);

$I->wantTo('Test cast null to empty.');
$I->sendGet($uri, ['data_type' => 'empty']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => null,
]);

$I->wantTo('Test cast null to float.');
$I->sendGet($uri, ['data_type' => 'float']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => null,
]);

$I->wantTo('Test cast null to html.');
$I->sendGet($uri, ['data_type' => 'html']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => [
        'html' => [
            ['_lang' => 'en-us'],
            [
                'head' => [
                    [
                        'meta' => [
                            ['_charset' => 'utf-8'],
                        ],
                    ], [
                        'title' => [
                            ['#text' => 'HTML generated by ApiOpenStudio'],
                        ],
                    ],
                ],
            ], [
                "body" => [
                    [
                        "div" => [
                            ["#text" => "null"],
                        ],
                    ],
                ],
            ],
        ],
    ],
]);

$I->wantTo('Test cast null to image.');
$I->sendGet($uri, ['data_type' => 'image']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => null,
]);

$I->wantTo('Test cast null to integer.');
$I->sendGet($uri, ['data_type' => 'integer']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => null,
]);

$I->wantTo('Test cast null to json.');
$I->sendGet($uri, ['data_type' => 'json']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => null,
]);

$I->wantTo('Test cast null to text.');
$I->sendGet($uri, ['data_type' => 'text']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => null,
]);

$I->wantTo('Test cast null to xml.');
$I->sendGet($uri, ['data_type' => 'xml']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => [
        'apiOpenStudioWrapper' => [
            'item' => [],
        ],
    ],
]);

$I->tearDownTestFromYaml($yamlFilename);

$I->comment('Testing with json literal object');
$uri = $I->getMyBaseUri() . '/cast/json';
$yamlFilename = 'castJsonObject.yaml';
$I->createResourceFromYaml($yamlFilename);

$I->wantTo('Test cast object to array.');
$I->sendGet($uri, ['data_type' => 'array']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => [
        "foo" => [
            ["foo" => "bar"],
            ["bar" => "foo"],
        ],
    ],
]);

$I->wantTo('Test cast object to boolean.');
$I->sendGet($uri, ['data_type' => 'boolean']);
$I->seeResponseCodeIs(400);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'error',
    'data' => [
        'code' => 6,
        'id' => 'test cast json object cast',
        'message' => 'Cannot cast JSON to boolean.',
    ],
]);

$I->wantTo('Test cast object to empty.');
$I->sendGet($uri, ['data_type' => 'empty']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => null,
]);

$I->wantTo('Test cast object to float.');
$I->sendGet($uri, ['data_type' => 'float']);
$I->seeResponseCodeIs(400);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'error',
    'data' => [
        'code' => 6,
        'id' => 'test cast json object cast',
        'message' => 'Cannot cast JSON to float.',
    ],
]);

$I->wantTo('Test cast object to html.');
$I->sendGet($uri, ['data_type' => 'html']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => [
        'html' => [
            ['_lang' => 'en-us'],
            [
                'head' => [
                    [
                        'meta' => [
                            ['_charset' => 'utf-8'],
                        ],
                    ], [
                        'title' => [
                            ['#text' => 'HTML generated by ApiOpenStudio'],
                        ],
                    ],
                ],
            ], [
                "body" => [
                    [
                        "dl" => [
                            [
                                "dt" => [
                                    ["#text" => "foo"],
                                ],
                            ], [
                                "dd" => [
                                    [
                                        "dl" => [
                                            [
                                                "dt" => [
                                                    ["#text" => "0"],
                                                ],
                                            ], [
                                                "dd" => [
                                                    [
                                                        "dl" => [
                                                            [
                                                                "dt" => [
                                                                    ["#text" => "foo"],
                                                                ],
                                                            ], [
                                                                "dd" => [
                                                                    ["#text" => "bar"],
                                                                ],
                                                            ]
                                                        ]
                                                    ]
                                                ]
                                            ], [
                                                "dt" => [
                                                    ["#text" => "1"],
                                                ],
                                            ], [
                                                "dd" => [
                                                    [
                                                        "dl" => [
                                                            [
                                                                "dt" => [
                                                                    ["#text" => "bar"],
                                                                ],
                                                            ], [
                                                                "dd" => [
                                                                    ["#text" => "foo"],
                                                                ],
                                                            ],
                                                        ],
                                                    ],
                                                ],
                                            ],
                                        ],
                                    ],
                                ],
                            ],
                        ],
                    ],
                ],
            ],
        ],
    ],
]);

$I->wantTo('Test cast object to image.');
$I->sendGet($uri, ['data_type' => 'image']);
$I->seeResponseCodeIs(400);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'error',
    'data' => [
        'code' => 6,
        'id' => 'test cast json object cast',
        'message' => 'Cannot cast JSON to image.',
    ],
]);

$I->wantTo('Test cast object to integer.');
$I->sendGet($uri, ['data_type' => 'integer']);
$I->seeResponseCodeIs(400);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'error',
    'data' => [
        'code' => 6,
        'id' => 'test cast json object cast',
        'message' => 'Cannot cast JSON to integer.',
    ],
]);

$I->wantTo('Test cast object to json.');
$I->sendGet($uri, ['data_type' => 'json']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => [
        "foo" => [
            ["foo" => "bar"],
            ["bar" => "foo"],
        ],
    ],
]);

$I->wantTo('Test cast object to text.');
$I->sendGet($uri, ['data_type' => 'text']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => [
        "foo" => [
            ["foo" => "bar"],
            ["bar" => "foo"],
        ],
    ],
]);

$I->wantTo('Test cast object to xml.');
$I->sendGet($uri, ['data_type' => 'xml']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => [
        'apiOpenStudioWrapper' => [
            "foo" => [
                ["foo" => "bar"],
                ["bar" => "foo"],
            ],
        ],
    ],
]);

$I->tearDownTestFromYaml($yamlFilename);

$I->comment('Testing with json literal text');
$uri = $I->getMyBaseUri() . '/cast/json';
$yamlFilename = 'castJsonText.yaml';
$I->createResourceFromYaml($yamlFilename);

$I->wantTo('Test cast text to array.');
$I->sendGet($uri, ['data_type' => 'array']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => ["Lorem ipsum dolor sit amet, consectetur..."],
]);

$I->wantTo('Test cast text to boolean.');
$I->sendGet($uri, ['data_type' => 'boolean']);
$I->seeResponseCodeIs(400);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'error',
    'data' => [
        'code' => 6,
        'id' => 'test cast json text cast',
        'message' => 'Cannot cast JSON to boolean.',
    ],
]);

$I->wantTo('Test cast text to empty.');
$I->sendGet($uri, ['data_type' => 'empty']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => null,
]);

$I->wantTo('Test cast text to float.');
$I->sendGet($uri, ['data_type' => 'float']);
$I->seeResponseCodeIs(400);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'error',
    'data' => [
        'code' => 6,
        'id' => 'test cast json text cast',
        'message' => 'Cannot cast JSON to float.',
    ],
]);

$I->wantTo('Test cast text to html.');
$I->sendGet($uri, ['data_type' => 'html']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => [
        'html' => [
            ['_lang' => 'en-us'],
            [
                'head' => [
                    [
                        'meta' => [
                            ['_charset' => 'utf-8'],
                        ],
                    ], [
                        'title' => [
                            ['#text' => 'HTML generated by ApiOpenStudio'],
                        ],
                    ],
                ],
            ], [
                "body" => [
                    [
                        "div" => [
                            ["#text" => "Lorem ipsum dolor sit amet, consectetur..."],
                        ],
                    ],
                ],
            ],
        ],
    ],
]);

$I->wantTo('Test cast text to image.');
$I->sendGet($uri, ['data_type' => 'image']);
$I->seeResponseCodeIs(400);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'error',
    'data' => [
        'code' => 6,
        'id' => 'test cast json text cast',
        'message' => 'Cannot cast JSON to image.',
    ],
]);

$I->wantTo('Test cast text to integer.');
$I->sendGet($uri, ['data_type' => 'integer']);
$I->seeResponseCodeIs(400);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'error',
    'data' => [
        'code' => 6,
        'id' => 'test cast json text cast',
        'message' => 'Cannot cast JSON to integer.',
    ],
]);

$I->wantTo('Test cast text to json.');
$I->sendGet($uri, ['data_type' => 'json']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => "Lorem ipsum dolor sit amet, consectetur...",
]);

$I->wantTo('Test cast text to text.');
$I->sendGet($uri, ['data_type' => 'text']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => "Lorem ipsum dolor sit amet, consectetur...",
]);

$I->wantTo('Test cast object to xml.');
$I->sendGet($uri, ['data_type' => 'xml']);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => [
        'apiOpenStudioWrapper' => [
            "item" => "Lorem ipsum dolor sit amet, consectetur...",
        ],
    ],
]);

$I->tearDownTestFromYaml($yamlFilename);
