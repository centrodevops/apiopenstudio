<?php

$I = new ApiTester($scenario);

// phpcs:ignore
$text = "<!DOCTYPE html>\n<html lang=\"en-us\">\n    <head>\n        <meta charset=\"utf-8\" />\n        <title>HTML generated by ApiOpenStudio</title>\n    </head>\n    <body>\n        <dl>\n            <dt>one</dt>\n            <dd>\n                <dl>\n                    <dt>one_one</dt>\n                    <dd>this</dd>\n                    <dt>one_two</dt>\n                    <dd>is</dd>\n                    <dt>one_three</dt>\n                    <dd>an</dd>\n                </dl>\n            </dd>\n            <dt>two</dt>\n            <dd>\n                <dl>\n                    <dt>two_one</dt>\n                    <dd>associative</dd>\n                    <dt>two_two</dt>\n                    <dd>array</dd>\n                </dl>\n            </dd>\n        </dl>\n    </body>\n</html>\n";

// phpcs:ignore
$xml = "<?xml version=\"1.0\" encoding=\"utf-8\"?>
<apiOpenStudioWrapper><item>&lt;!DOCTYPE html&gt;
&lt;html lang=\"en-us\"&gt;
    &lt;head&gt;
        &lt;meta charset=\"utf-8\" /&gt;
        &lt;title&gt;HTML generated by ApiOpenStudio&lt;/title&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;dl&gt;
            &lt;dt&gt;one&lt;/dt&gt;
            &lt;dd&gt;
                &lt;dl&gt;
                    &lt;dt&gt;one_one&lt;/dt&gt;
                    &lt;dd&gt;this&lt;/dd&gt;
                    &lt;dt&gt;one_two&lt;/dt&gt;
                    &lt;dd&gt;is&lt;/dd&gt;
                    &lt;dt&gt;one_three&lt;/dt&gt;
                    &lt;dd&gt;an&lt;/dd&gt;
                &lt;/dl&gt;
            &lt;/dd&gt;
            &lt;dt&gt;two&lt;/dt&gt;
            &lt;dd&gt;
                &lt;dl&gt;
                    &lt;dt&gt;two_one&lt;/dt&gt;
                    &lt;dd&gt;associative&lt;/dd&gt;
                    &lt;dt&gt;two_two&lt;/dt&gt;
                    &lt;dd&gt;array&lt;/dd&gt;
                &lt;/dl&gt;
            &lt;/dd&gt;
        &lt;/dl&gt;
    &lt;/body&gt;
&lt;/html&gt;
</item></apiOpenStudioWrapper>";

$html = "<!DOCTYPE html>\n";
// phpcs:ignore
$html .= '<html lang="en-us">
    <head>
        <meta charset="utf-8" />
        <title>HTML generated by ApiOpenStudio</title>
    </head>
    <body>
        <dl>
            <dt>one</dt>
            <dd>
                <dl>
                    <dt>one_one</dt>
                    <dd>this</dd>
                    <dt>one_two</dt>
                    <dd>is</dd>
                    <dt>one_three</dt>
                    <dd>an</dd>
                </dl>
            </dd>
            <dt>two</dt>
            <dd>
                <dl>
                    <dt>two_one</dt>
                    <dd>associative</dd>
                    <dt>two_two</dt>
                    <dd>array</dd>
                </dl>
            </dd>
        </dl>
    </body>
</html>';

$I->performLogin(getenv('TESTER_DEVELOPER_NAME'), getenv('TESTER_DEVELOPER_PASS'));
$yamlFilename = 'textHtml.yaml';
$uri = $I->getMyBaseUri() . '/text/html';
$I->createResourceFromYaml($yamlFilename);

// json - application/json
$I->wantTo('Test a html string with accept: application/json.');
$I->haveHttpHeader('Accept', 'application/json');
$I->sendGet($uri);
$I->seeResponseCodeIs(200);
$I->seeResponseIsJson();
$I->seeResponseContainsJson([
    'result' => 'ok',
    'data' => $text,
]);
$I->deleteHeader('Accept');

// xml - application/xml
$I->wantTo('Test a html string with accept: application/xml.');
$I->haveHttpHeader('Accept', 'application/xml');
$I->sendGet($uri);
$I->seeResponseCodeIs(200);
$I->seeResponseIsXml();
$I->seeResponseContains($xml);
$I->deleteHeader('Accept');

// xml - text/xml
$I->wantTo('Test a html string with accept: text/xml.');
$I->haveHttpHeader('Accept', 'text/xml');
$I->sendGet($uri);
$I->seeResponseCodeIs(200);
$I->seeResponseIsXml();
$I->seeResponseContains($xml);
$I->deleteHeader('Accept');

// text = text/plain
$I->wantTo('Test a html string with accept: text/plain.');
$I->haveHttpHeader('Accept', 'text/plain');
$I->sendGet($uri);
$I->seeResponseCodeIs(200);
$I->seeResponseContains($text);
$I->deleteHeader('Accept');

// html = text/html
$I->wantTo('Test a html string with accept: text/html.');
$I->haveHttpHeader('Accept', 'text/html');
$I->sendGet($uri);
$I->seeResponseCodeIs(200);
$I->seeResponseIsXml();
$I->seeResponseContains($html);
$I->deleteHeader('Accept');

$I->haveHttpHeader('Accept', 'application/json');
$I->tearDownTestFromYaml($yamlFilename);
